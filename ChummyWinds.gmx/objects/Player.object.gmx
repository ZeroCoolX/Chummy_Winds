<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>LifeformParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
face = -1;
hspd = 0;
vspd = 0;
state = 0;
image_blend = make_colour_rgb(220, 150,150);
dead = false;
target = Mouse;
cur_shape = SHAPE_NONE;
scr_get_input();
state = scr_init(Wall);
up_image = spr_player_up;
down_image = spr_player_down;
left_image = spr_player_left;
right_image = spr_player_right;
dash_image = dude_dash_right;
should_dash = -1;
dash_dir = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///return from being knocked out of 2d
speed += 50;
image_blend = c_white;
state = scr_move;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Returning from the hurt_state reset speed back to 0 change colour back and move again
speed += 50;
image_blend = c_white;
state = scr_move;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Returning from the hurt_state reset speed back to 0 change colour back and move again
speed += 60;
image_blend = c_white;
state = scr_move;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///alarm for turning back to original sprite
up_image = spr_player_up;
down_image = spr_player_down;
left_image = spr_player_left;
right_image = spr_player_right;
cur_shape = SHAPE_NONE;
scr_player_face();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///This alarm is for the dash state
should_dash = -1;
dash_dir = 0;
state = scr_move;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Step Event
if(cur_shape == SHAPE_NONE){
    depth = -y;
}else{
    depth = 50;
}
x = clamp(x, 0, room_width);
y = clamp(y, 0, room_height);
script_execute(state);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="BaddieParent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
///Collision code
/*
Rules for collisions:
1) If the player is in his normal state as a human (either idle, moving, or dashing) and touched at all by any enemy he takes damage
2) If the player is in a shape and touches (either idle, moving, dashing) an enemy who is NOT in the same shape, the player gets knocked out of the shape
3) If the player is in a shape and touches an enemy who IS the same shape, the player and the enemy get deflected apart and no one takes damage
4) If the player in in a shape and DASHES into an enemy who is in the same shape the player will KILL that enemy and gain a kill
*/
if(!dead) {
    if(cur_shape == SHAPE_NONE){
       scr_hurt_player();
    }else{
       if(state == scr_dash_state){//player is curently dashing
         if(cur_shape == other.cur_shape){//player is the same shape as the thing its colliding with so kill the enemy
             if(instance_exists(PlayerStats)){//add to the playerstats killcount too
                 PlayerStats.kills -= 1;
             }
             with(other){//kill enemy player collided with
                 instance_destroy();
             }
             alarm[1] = 50;
        }else{//player is NOT the same shape but is dashing
             scr_player_leave_2d();
        }
       }else{//player is not dashing
         if(cur_shape == other.cur_shape){//but the player is the same shape so deflect
             //deflect and change back
             show_debug_message("dont hurt the player but the player and collider are same shape so deflect");
             //change colour
             with(other){
                 image_blend = c_yellow;
                 speed = -50;
                 alarm[1] = room_speed/6;
             }
             scr_player_deflect();//change back
         }else{//player is NOT the same shape and isn't dashing...so hurt them
             scr_player_leave_2d();
         }
       }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///press event for dashing

if(instance_exists(PlayerStats) &amp;&amp; !dead){
   if(PlayerStats.stamina &gt; DASH_COST){
       var dir = point_direction(x, y, target.x, target.y);
       if(point_distance(x, y, target.x, target.y) &lt; 150){
           should_dash = 1;
       }else{
           should_dash = 0;
       }
       state = scr_dash_state;
       alarm[0] = room_speed / 6; //frames per second - 30 for now. 8 is arbitrary
       PlayerStats.stamina -= DASH_COST;
       PlayerStats.alarm[0] = room_speed;
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(cur_shape == SHAPE_NONE) {
    draw_sprite(spr_shadow, image_index, x, y+13);
}
if(sprite_index != -1) {
    draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
